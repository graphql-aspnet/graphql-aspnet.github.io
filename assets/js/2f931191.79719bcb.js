"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4303],{5680:(e,r,t)=>{t.d(r,{xA:()=>p,yg:()=>y});var n=t(6540);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=n.createContext({}),c=function(e){var r=n.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):l(l({},r),e)),t},p=function(e){var r=c(e.components);return n.createElement(s.Provider,{value:r},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},h=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=c(t),h=a,y=d["".concat(s,".").concat(h)]||d[h]||u[h]||o;return t?n.createElement(y,l(l({ref:r},p),{},{components:t})):n.createElement(y,l({ref:r},p))}));function y(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=h;var i={};for(var s in r)hasOwnProperty.call(r,s)&&(i[s]=r[s]);i.originalType=e,i[d]="string"==typeof e?e:a,l[1]=i;for(var c=2;c<o;c++)l[c]=t[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}h.displayName="MDXCreateElement"},5689:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var n=t(8168),a=(t(6540),t(5680));const o={id:"graph-controller",title:"Graph Controller",sidebar_label:"GraphController",sidebar_position:4},l=void 0,i={unversionedId:"reference/graph-controller",id:"reference/graph-controller",title:"Graph Controller",description:"\u2705 See the section on Controllers & Actions for a detailed explination on how action methods work and how to declare them.",source:"@site/docs/reference/graph-controller.md",sourceDirName:"reference",slug:"/reference/graph-controller",permalink:"/docs/reference/graph-controller",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{id:"graph-controller",title:"Graph Controller",sidebar_label:"GraphController",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Attributes",permalink:"/docs/reference/attributes"},next:{title:"GraphDirective",permalink:"/docs/reference/graph-directive"}},s={},c=[{value:"ModelState",id:"modelstate",level:2},{value:"Request",id:"request",level:2},{value:"Notable Items on the Request",id:"notable-items-on-the-request",level:3},{value:"User",id:"user",level:2},{value:"Schema",id:"schema",level:2}],p={toc:c};function d(e){let{components:r,...t}=e;return(0,a.yg)("wrapper",(0,n.A)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,a.yg)("p",null,"\u2705 See the section on ",(0,a.yg)("a",{parentName:"p",href:"/docs/controllers/actions"},"Controllers & Actions")," for a detailed explination on how action methods work and how to declare them."),(0,a.yg)("p",null,"The ",(0,a.yg)("inlineCode",{parentName:"p"},"GraphController"),", from which all of your controllers inherit, is a core object used throughout graphql. This page details some lesser known and lesser used object referenced made available to each controller."),(0,a.yg)("h2",{id:"modelstate"},"ModelState"),(0,a.yg)("p",null,"The completed model state dictionary contains an entry for each validated parameter."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-csharp"},"public class CharacterController : GraphController\n{\n    [Query]\n    public IGraphActionResult CreateCharacter(Character characterModel)\n    {\n        // highlight-next-line\n        if(!this.ModelState.IsValid)\n            return this.BadRequest(this.ModelState);\n\n        //...\n    }\n}\n")),(0,a.yg)("h2",{id:"request"},"Request"),(0,a.yg)("p",null,"The field request generated via the execution pipeline. It contains all the necessary information used by graphql to resolve the current field."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-csharp"},"public class CharacterController : GraphController\n{\n    [Query]\n    public IGraphActionResult Hero(Episode episode = Episode.EMPIRE)\n    {\n        // highlight-next-line\n        if(this.Request.Field.IsLeaf)\n        {\n            // ...\n        }\n    }\n}\n")),(0,a.yg)("h3",{id:"notable-items-on-the-request"},"Notable Items on the Request"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("inlineCode",{parentName:"p"},"Request.Field"),": A reference to the graph field definition, on the target schema, for the field currently being resolved."),(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},".TypeExpression"),": The type expression describing the return value of this field"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},".IsLeaf"),": Indicates whether this field returns a leaf value (enum or scalar) or an object."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},".Mode"),': Indicates the processing mode of this field (Batch or "per item")'),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},".FieldSource"),": Indicates what member type generated the field; property, method, action etc."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},".DataSource"),": The source data item being supplied to the field to be resolved."))),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("inlineCode",{parentName:"p"},"Request.Items"),": A collection of key/value pairs accessible to all fields and directives in this individual request pipeline."))),(0,a.yg)("h2",{id:"user"},"User"),(0,a.yg)("p",null,"The User property contains the ",(0,a.yg)("inlineCode",{parentName:"p"},"ClaimsPrincipal")," created by ASP.NET when this request was authorized. "),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-csharp"},'public class CharacterController : GraphController\n{\n    [Query]\n    public IGraphActionResult Hero(Episode episode = Episode.EMPIRE)\n    {\n        // highlight-next-line\n        if(this.User.Identity.Name == "DebbieEast")\n        {\n            // ...\n        }\n    }\n}\n')),(0,a.yg)("blockquote",null,(0,a.yg)("p",{parentName:"blockquote"},"See the section on ",(0,a.yg)("a",{parentName:"p",href:"/docs/controllers/authorization"},"authorization")," for more details on how users are authenticated and authorized to action methods.")),(0,a.yg)("h2",{id:"schema"},"Schema"),(0,a.yg)("p",null,"The ",(0,a.yg)("inlineCode",{parentName:"p"},"Schema")," property contains a reference to the singleton instance of the schema the current controller is resolving a field for. This object is considered read-only and should not be modified."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-csharp"},"public class CharacterController : GraphController\n{\n    [Query]\n    public IGraphActionResult Hero(Episode episode = Episode.EMPIRE)\n    {\n        // highlight-next-line\n        IObjectGraphType droidType = this.Schema.KnownTypes.FindGraphType(typeof(Droid), TypeKind.OBJECT);\n        // ...\n    }\n}\n")))}d.isMDXComponent=!0}}]);